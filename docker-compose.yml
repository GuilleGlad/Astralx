services:
  mysql:
    image: mysql:8.0
    container_name: astralx-mysql
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: astralx_dev
      MYSQL_USER: astralx
      MYSQL_PASSWORD: astralx123
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10
    networks:
      - astralx-network

  redis:
    image: redis:7-alpine
    container_name: astralx-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      timeout: 20s
      retries: 10
    networks:
      - astralx-network

  minio:
    image: minio/minio:latest
    container_name: astralx-minio
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin123
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio-data:/data
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "mc", "ready", "local"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - astralx-network

  minio-setup:
    image: minio/mc:latest
    container_name: astralx-minio-setup
    depends_on:
      minio:
        condition: service_healthy
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc alias set myminio http://minio:9000 minioadmin minioadmin123;
      /usr/bin/mc mb myminio/astralx-media --ignore-existing;
      /usr/bin/mc anonymous set download myminio/astralx-media;
      exit 0;
      "
    networks:
      - astralx-network

  api:
    build:
      context: ..
      dockerfile: infra/Dockerfile.api
    container_name: astralx-api
    environment:
      NODE_ENV: development
      DB_HOST: mysql
      DB_PORT: 3306
      DB_USER: astralx
      DB_PASSWORD: astralx123
      DB_NAME: astralx_dev
      REDIS_HOST: redis
      REDIS_PORT: 6379
      MINIO_ENDPOINT: minio
      MINIO_PORT: 9000
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin123
      MINIO_USE_SSL: "false"
      MINIO_BUCKET: astralx-media
    ports:
      - "3000:3000"
    volumes:
      - ../apps/api:/app/apps/api
      - /app/node_modules
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
      minio:
        condition: service_healthy
    command: npm run start:api
    networks:
      - astralx-network

volumes:
  mysql-data:
  redis-data:
  minio-data:

networks:
  astralx-network:
    driver: bridge
